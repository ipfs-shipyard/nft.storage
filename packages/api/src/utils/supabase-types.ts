/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown
      }
    }
  }
  '/account_keys': {
    get: {
      parameters: {
        query: {
          key_id?: parameters['rowFilter.account_keys.key_id']
          name?: parameters['rowFilter.account_keys.name']
          secret?: parameters['rowFilter.account_keys.secret']
          issuer?: parameters['rowFilter.account_keys.issuer']
          inserted_at?: parameters['rowFilter.account_keys.inserted_at']
          updated_at?: parameters['rowFilter.account_keys.updated_at']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['account_keys'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** account_keys */
          account_keys?: definitions['account_keys']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          key_id?: parameters['rowFilter.account_keys.key_id']
          name?: parameters['rowFilter.account_keys.name']
          secret?: parameters['rowFilter.account_keys.secret']
          issuer?: parameters['rowFilter.account_keys.issuer']
          inserted_at?: parameters['rowFilter.account_keys.inserted_at']
          updated_at?: parameters['rowFilter.account_keys.updated_at']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          key_id?: parameters['rowFilter.account_keys.key_id']
          name?: parameters['rowFilter.account_keys.name']
          secret?: parameters['rowFilter.account_keys.secret']
          issuer?: parameters['rowFilter.account_keys.issuer']
          inserted_at?: parameters['rowFilter.account_keys.inserted_at']
          updated_at?: parameters['rowFilter.account_keys.updated_at']
        }
        body: {
          /** account_keys */
          account_keys?: definitions['account_keys']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/accounts': {
    get: {
      parameters: {
        query: {
          issuer?: parameters['rowFilter.accounts.issuer']
          sub?: parameters['rowFilter.accounts.sub']
          name?: parameters['rowFilter.accounts.name']
          picture?: parameters['rowFilter.accounts.picture']
          github?: parameters['rowFilter.accounts.github']
          email?: parameters['rowFilter.accounts.email']
          public_address?: parameters['rowFilter.accounts.public_address']
          inserted_at?: parameters['rowFilter.accounts.inserted_at']
          updated_at?: parameters['rowFilter.accounts.updated_at']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['accounts'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** accounts */
          accounts?: definitions['accounts']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          issuer?: parameters['rowFilter.accounts.issuer']
          sub?: parameters['rowFilter.accounts.sub']
          name?: parameters['rowFilter.accounts.name']
          picture?: parameters['rowFilter.accounts.picture']
          github?: parameters['rowFilter.accounts.github']
          email?: parameters['rowFilter.accounts.email']
          public_address?: parameters['rowFilter.accounts.public_address']
          inserted_at?: parameters['rowFilter.accounts.inserted_at']
          updated_at?: parameters['rowFilter.accounts.updated_at']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          issuer?: parameters['rowFilter.accounts.issuer']
          sub?: parameters['rowFilter.accounts.sub']
          name?: parameters['rowFilter.accounts.name']
          picture?: parameters['rowFilter.accounts.picture']
          github?: parameters['rowFilter.accounts.github']
          email?: parameters['rowFilter.accounts.email']
          public_address?: parameters['rowFilter.accounts.public_address']
          inserted_at?: parameters['rowFilter.accounts.inserted_at']
          updated_at?: parameters['rowFilter.accounts.updated_at']
        }
        body: {
          /** accounts */
          accounts?: definitions['accounts']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/contents': {
    get: {
      parameters: {
        query: {
          cid?: parameters['rowFilter.contents.cid']
          size?: parameters['rowFilter.contents.size']
          inserted_at?: parameters['rowFilter.contents.inserted_at']
          updated_at?: parameters['rowFilter.contents.updated_at']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['contents'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** contents */
          contents?: definitions['contents']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          cid?: parameters['rowFilter.contents.cid']
          size?: parameters['rowFilter.contents.size']
          inserted_at?: parameters['rowFilter.contents.inserted_at']
          updated_at?: parameters['rowFilter.contents.updated_at']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          cid?: parameters['rowFilter.contents.cid']
          size?: parameters['rowFilter.contents.size']
          inserted_at?: parameters['rowFilter.contents.inserted_at']
          updated_at?: parameters['rowFilter.contents.updated_at']
        }
        body: {
          /** contents */
          contents?: definitions['contents']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/pins': {
    get: {
      parameters: {
        query: {
          pin_id?: parameters['rowFilter.pins.pin_id']
          status?: parameters['rowFilter.pins.status']
          cid?: parameters['rowFilter.pins.cid']
          service?: parameters['rowFilter.pins.service']
          error?: parameters['rowFilter.pins.error']
          inserted_at?: parameters['rowFilter.pins.inserted_at']
          updated_at?: parameters['rowFilter.pins.updated_at']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['pins'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** pins */
          pins?: definitions['pins']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          pin_id?: parameters['rowFilter.pins.pin_id']
          status?: parameters['rowFilter.pins.status']
          cid?: parameters['rowFilter.pins.cid']
          service?: parameters['rowFilter.pins.service']
          error?: parameters['rowFilter.pins.error']
          inserted_at?: parameters['rowFilter.pins.inserted_at']
          updated_at?: parameters['rowFilter.pins.updated_at']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          pin_id?: parameters['rowFilter.pins.pin_id']
          status?: parameters['rowFilter.pins.status']
          cid?: parameters['rowFilter.pins.cid']
          service?: parameters['rowFilter.pins.service']
          error?: parameters['rowFilter.pins.error']
          inserted_at?: parameters['rowFilter.pins.inserted_at']
          updated_at?: parameters['rowFilter.pins.updated_at']
        }
        body: {
          /** pins */
          pins?: definitions['pins']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/uploads': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.uploads.id']
          issuer?: parameters['rowFilter.uploads.issuer']
          key_id?: parameters['rowFilter.uploads.key_id']
          cid?: parameters['rowFilter.uploads.cid']
          type?: parameters['rowFilter.uploads.type']
          files?: parameters['rowFilter.uploads.files']
          inserted_at?: parameters['rowFilter.uploads.inserted_at']
          updated_at?: parameters['rowFilter.uploads.updated_at']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['uploads'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** uploads */
          uploads?: definitions['uploads']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.uploads.id']
          issuer?: parameters['rowFilter.uploads.issuer']
          key_id?: parameters['rowFilter.uploads.key_id']
          cid?: parameters['rowFilter.uploads.cid']
          type?: parameters['rowFilter.uploads.type']
          files?: parameters['rowFilter.uploads.files']
          inserted_at?: parameters['rowFilter.uploads.inserted_at']
          updated_at?: parameters['rowFilter.uploads.updated_at']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.uploads.id']
          issuer?: parameters['rowFilter.uploads.issuer']
          key_id?: parameters['rowFilter.uploads.key_id']
          cid?: parameters['rowFilter.uploads.cid']
          type?: parameters['rowFilter.uploads.type']
          files?: parameters['rowFilter.uploads.files']
          inserted_at?: parameters['rowFilter.uploads.inserted_at']
          updated_at?: parameters['rowFilter.uploads.updated_at']
        }
        body: {
          /** uploads */
          uploads?: definitions['uploads']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
}

export interface definitions {
  account_keys: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    key_id: number
    name: string
    secret: string
    /**
     * Note:
     * This is a Foreign Key to `accounts.issuer`.<fk table='accounts' column='issuer'/>
     */
    issuer: string
    inserted_at: string
    updated_at: string
  }
  accounts: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    issuer: string
    sub: string
    name: string
    picture?: string
    github?: string
    email: string
    public_address: string
    inserted_at: string
    updated_at: string
  }
  contents: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    cid: string
    size?: number
    inserted_at: string
    updated_at: string
  }
  pins: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    pin_id: number
    status: 'processing' | 'queued' | 'pinning' | 'pinned' | 'failed'
    /**
     * Note:
     * This is a Foreign Key to `contents.cid`.<fk table='contents' column='cid'/>
     */
    cid: string
    service: 'PINATA' | 'IPFS_CLUSTER'
    error?: string
    inserted_at: string
    updated_at: string
  }
  uploads: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    /**
     * Note:
     * This is a Foreign Key to `accounts.issuer`.<fk table='accounts' column='issuer'/>
     */
    issuer: string
    /**
     * Note:
     * This is a Foreign Key to `account_keys.key_id`.<fk table='account_keys' column='key_id'/>
     */
    key_id?: number
    /**
     * Note:
     * This is a Foreign Key to `contents.cid`.<fk table='contents' column='cid'/>
     */
    cid?: string
    type: string
    files?: string
    inserted_at: string
    updated_at: string
  }
}

export interface parameters {
  /** Preference */
  preferParams: 'params=single-object'
  /** Preference */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
  /** Preference */
  preferCount: 'count=none'
  /** Filtering Columns */
  select: string
  /** On Conflict */
  on_conflict: string
  /** Ordering */
  order: string
  /** Limiting and Pagination */
  range: string
  /** Limiting and Pagination */
  rangeUnit: string
  /** Limiting and Pagination */
  offset: string
  /** Limiting and Pagination */
  limit: string
  /** account_keys */
  'body.account_keys': definitions['account_keys']
  'rowFilter.account_keys.key_id': string
  'rowFilter.account_keys.name': string
  'rowFilter.account_keys.secret': string
  'rowFilter.account_keys.issuer': string
  'rowFilter.account_keys.inserted_at': string
  'rowFilter.account_keys.updated_at': string
  /** accounts */
  'body.accounts': definitions['accounts']
  'rowFilter.accounts.issuer': string
  'rowFilter.accounts.sub': string
  'rowFilter.accounts.name': string
  'rowFilter.accounts.picture': string
  'rowFilter.accounts.github': string
  'rowFilter.accounts.email': string
  'rowFilter.accounts.public_address': string
  'rowFilter.accounts.inserted_at': string
  'rowFilter.accounts.updated_at': string
  /** contents */
  'body.contents': definitions['contents']
  'rowFilter.contents.cid': string
  'rowFilter.contents.size': string
  'rowFilter.contents.inserted_at': string
  'rowFilter.contents.updated_at': string
  /** pins */
  'body.pins': definitions['pins']
  'rowFilter.pins.pin_id': string
  'rowFilter.pins.status': string
  'rowFilter.pins.cid': string
  'rowFilter.pins.service': string
  'rowFilter.pins.error': string
  'rowFilter.pins.inserted_at': string
  'rowFilter.pins.updated_at': string
  /** uploads */
  'body.uploads': definitions['uploads']
  'rowFilter.uploads.id': string
  'rowFilter.uploads.issuer': string
  'rowFilter.uploads.key_id': string
  'rowFilter.uploads.cid': string
  'rowFilter.uploads.type': string
  'rowFilter.uploads.files': string
  'rowFilter.uploads.inserted_at': string
  'rowFilter.uploads.updated_at': string
}

export interface operations {}

export interface external {}
