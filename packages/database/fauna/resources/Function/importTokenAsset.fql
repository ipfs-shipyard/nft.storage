/**
 * Helper function imports a new `TokenAsset`. If token asset with given
 * `tokenURI` already exists just returns it back. Also creates analyze
 * task for the new token asset.
 *
 * @param {Object} data
 * @param {string} data.tokenURI - Token URI
 * @param {Timestamp} [data.created]
 * @param {Timestamp} [data.updated]
 */
CreateFunction({
  name: 'importTokenAsset',
  body: Query(
    Lambda(
      ['data'],
      Let(
        {
          tokenURI: Select('tokenURI', Var('data')),
          updated: Select('updated', Var('data'), Now()),
          match: Match(Index('unique_TokenAsset_tokenURI'), Var('tokenURI')),
        },
        If(
          // If TokenAsset for such tokenURI does not exist create one and
          // create a corresponding analyze task for it. Otherwise just get
          // matched TokenAsset document.
          IsEmpty(Var('match')),
          Let(
            {
              tokenAsset: Create(Collection('TokenAsset'), {
                data: {
                  tokenURI: Var('tokenURI'),
                  created: Select('created', Var('data'), Now()),
                  updated: Var('updated'),
                  status: 'Queued',
                },
              }),
            },
            Do(
              Create(Collection('ScheduledAnalyze'), {
                data: {
                  tokenAsset: Select('ref', Var('tokenAsset')),
                  attempt: 1,
                },
              }),
              Var('tokenAsset')
            )
          ),
          Get(Var('match'))
        )
      )
    )
  ),
})
