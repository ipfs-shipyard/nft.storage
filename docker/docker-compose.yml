services:
  post-rest:
    image: postgrest/postgrest:v9.0.0
    depends_on:
      db-init:
        condition: service_completed_successfully
    environment:
      PGRST_DB_URI: $DATABASE_CONNECTION
      PGRST_DB_SCHEMAS: public,cargo
      PGRST_DB_ANON_ROLE: postgres
      PGRST_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
  db-init:
    restart: on-failure
    build:
      dockerfile: './docker/Dockerfile'
      context: '../packages/api'
    entrypoint: 'psql $DATABASE_CONNECTION -v "ON_ERROR_STOP=1" -f ./db/config.sql -f ./db/tables.sql -f ./db/cargo.testing.sql -f ./db/functions.sql'
    depends_on:
      - db
    environment:
      - DATABASE_URL
      - DATABASE_TOKEN
      - DATABASE_CONNECTION
  api:
    restart: on-failure
    build:
      dockerfile: ./docker/Dockerfile
      context: ../packages/api
    environment:
      - PRIVATE_KEY
      - DATABASE_URL
      - DATABASE_TOKEN
      - DATABASE_CONNECTION
      - SALT
      - MAGIC_SECRET_KEY
      - SENTRY_DSN
      - MAILCHIMP_API_KEY
      - LOGTAIL_TOKEN
      - CLUSTER_API_URL
      - CLUSTER_BASIC_AUTH_TOKEN
    depends_on:
      - post-rest
    volumes:
      # volume paths are relative to the compose file, not the build context
      - ../packages/api/src:/app/src:ro
  db:
    build:
      context: ../packages/api/docker/postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
  ipfs:
    image: ipfs/go-ipfs:v0.10.0 # update this when go-ipfs M1 macs https://github.com/ipfs/go-ipfs/issues/8645

  ipfs-cluster:
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs
    environment:
      CLUSTER_PEERNAME: cluster
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_RESTAPI_BASICAUTHCREDENTIALS: test:test
      CLUSTER_RESTAPI_CORSALLOWEDMETHODS: GET,POST,OPTIONS
      CLUSTER_RESTAPI_CORSALLOWEDHEADERS: authorization
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
  playwright:
    profiles:
      - test
    depends_on:
      api:
        condition: service_healthy
    build:
      dockerfile: ./docker/test.Dockerfile
      context: ../packages/api
    environment:
      - PRIVATE_KEY
      - DATABASE_URL
      - DATABASE_TOKEN
      - DATABASE_CONNECTION
      - SALT
      - MAGIC_SECRET_KEY
      - SENTRY_DSN
      - MAILCHIMP_API_KEY
      - LOGTAIL_TOKEN
      - CLUSTER_API_URL
      - CLUSTER_BASIC_AUTH_TOKEN
