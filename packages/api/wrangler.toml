# Development

account_id = "fffa4b4363a7e5250af8357087263b3a"
name = "nft-storage-dev"
type = "javascript"
workers_dev = true

# Compatibility flags https://github.com/cloudflare/wrangler/pull/2009
compatibility_date = "2021-08-23"
compatibility_flags = ["formdata_parser_supports_files"]

[vars]
DATABASE_URL = "http://localhost:3000"
DEBUG = "true"
ENV = "dev"

[build]
command = "scripts/cli.js build"
watch_dir = "src"

[build.upload]
format = "service-worker"

[miniflare]
host = "0.0.0.0"
port = "8787"

# Staging

[env.staging]
name = "nft-storage-staging"
route = "api-staging.nft.storage/*"
usage_model = "unbound"
zone_id = "fc6cb51dbc2d0b9a729eae6a302a49c9"

[env.staging.vars]
DATABASE_URL = "https://nft-storage-pgrest-staging.herokuapp.com"
DEBUG = "true"
ENV = "staging"

[env.staging.build]
command = "scripts/cli.js build --env staging"
watch_dir = "src"

[env.staging.build.upload]
format = "service-worker"

# Production

[env.production]
name = "nft-storage"
route = "api.nft.storage/*"
usage_model = "unbound"
zone_id = "fc6cb51dbc2d0b9a729eae6a302a49c9"

[env.production.vars]
DATABASE_URL = "https://nft-storage-pgrest-prod.herokuapp.com"
DEBUG = "false"
ENV = "production"

[env.production.build]
command = "scripts/cli.js build --env production"
watch_dir = "src"

[env.production.build.upload]
format = "service-worker"
